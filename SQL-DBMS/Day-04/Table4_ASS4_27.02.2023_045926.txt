student/student@ 172.16.1.210:1521/oracle

1. Display the current DATE and TIME
SOL: SELECT SYSDATE,TO_CHAR(SYSTIMESTAMP,'HH:MM:SS') "SYS_TIME" FROM DUAL;
2. Multiply 2 by 2 .
SOL: SELECT 'THE MULTIPLICATION OF 2*2 IS'|| ' ' ||2*2 FROM DUAL;
3. Find the absolute value of -15
SOL: SELECT 'THE ABSOLUTE VALUE OF -15 IS'|| ' ' ||ABS(-15) "ABSOLUTE VALUE" FROM DUAL;
4. Calculate the square root of 5.
SOL: SELECT 'THE SQUAREROOT OF 5 IS'|| ' ' ||ROUND(SQRT(5),2) "SQUARE VALUE" FROM DUAL; 
5. Round off 15.19 to one decimal point.
SOL: SELECT 'THE ROUNDED VALUE:'||' '||ROUND(15.19,1) AS ROUNDEDVALUE FROM DUAL;
6.  Display the name "IVAN BAYROSS" in LOWERCASE.
SOL: SELECT LOWER('IVAN BAYROSS') AS LOWER_NAME FROM DUAL;
7. Display the name "IVAN BAYROSS" in UPPERCASE
SOL: SELECT UPPER('ivan bayross') AS UPPER_NAME FROM DUAL;
8. Add 5 months to the present date and print the output.
SOL: SELECT ADD_MONTHS(SYSDATE,5) AS DateAdd FROM DUAL;
9. Display the number of months between â€˜02-JAN-01' and '02-JUL-01'. 
SOL: SELECT ABS(MONTHS_BETWEEN('02-JAN-01','02-JUL-01')) MONTH_DIFF FROM DUAL;
10. Print the system date in the particular format "DD/MMIYYYY".
SOL: SELECT TO_CHAR(SYSDATE,'DD/MM/YYYY') FROM DUAL;

CREATE TABLE STUDENT_EMP50_27_2_2023 (
    EMPNO number(5) PRIMARY KEY CHECK(Empno >= 7000 AND Empno <= 8000),
    ENAME varchar2(10),
    JOB varchar2(20),
    MGR number(5),
    HIREDATE Date,
    SAL number(10),
    COMM number(5) DEFAULT(0) CHECK(COMM < 1500),
    LOC VARCHAR2(20),
    GRADE NUMBER(3),
    DEPT_ID NUMBER(7) REFERENCES STUDENT_DEPT50_27_2_2023(DEPT_ID),
    DEPT_NAME VARCHAR2(30)
);

CREATE TABLE STUDENT_DEPT50_27_2_2023(
	DEPT_ID NUMBER(7) PRIMARY KEY,
	DEPT_NAME VARCHAR2(30)
);

INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7008,'JOHN','ENGINEER',NULL,'17-DEC-1979',70000,NULL, 'WASHINGTON', 30,1001,'ENG');
INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7009, 'WILLIAM','MANAGER', 8871, '16-JUN-2008', 118000, 0, 'DALLAS', 30,2001,'MGR');
INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7010, 'SMITH', 'MANAGER', 8872, '28-FEB-2009', 25000, 0, 'BROOKLYN', 40,2001,'MGR');
INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7020, 'TURNER', 'ENGINEER', NULL, '20-MAR-2020', 65000, 0, 'CALIFORNIA', 80,1001,'ENG');
INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7400, 'FORD', 'SALESMAN', NULL,'07-MAR-1988', 15000, 1130, 'DALLAS', 50,3001,'SALES');
INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7500, 'SANTIAGO', 'CLERK', NULL,'10-FEB-2009', 55000, 0, 'JAKARTA', 40,4001,'CLRK');
INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7600, 'OLIVIA', 'ENGINEER', NULL,'17-JAN-2000', 100000, 0, 'CALIFORNIA', 20,1001,'ENG');
INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7700, 'DALLAS', 'DATABASEADMIN',NULL, '22-SEP-2002', 100000, 0, 'NEWYORK', 30,5001,'DBA');
INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7800, 'PAUL', 'SALESMAN', NULL, '19-JUL-2010', 19000, 1000, 'DALLAS', 60,3001,'SALES');
INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7900, 'MARTIN', 'TECHNICIAN', NULL,'17-JAN-2001', 40000, NULL, 'INDIANA', 80,6001,'TCHN');
INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7901, 'ALLEN', 'TECHNICIAN', NULL,'17-FEB-2000', 41000, NULL, 'SAUPAULO', 10,6001,'TCHN');
INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7902, 'ADAMS', 'ENGINEER', NULL,'27-DEC-2000', 20000, NULL, 'TEXAS', 40,1001,'ENG');
INSERT INTO STUDENT_EMP50_27_2_2023 VALUES (7903, 'JON', 'CLERK', NULL,'27-JUL-2000', 1000, NULL,'TEXAS', 18,4001,'CLRK');

INSERT INTO STUDENT_DEPT50_27_2_2023 VALUES (1001,'DEVELOPER');
INSERT INTO STUDENT_DEPT50_27_2_2023 VALUES (2001,'MANAGER');
INSERT INTO STUDENT_DEPT50_27_2_2023 VALUES (3001,'SALES');
INSERT INTO STUDENT_DEPT50_27_2_2023 VALUES (4001,'CLERICAL');
INSERT INTO STUDENT_DEPT50_27_2_2023 VALUES (5001,'DBA');
INSERT INTO STUDENT_DEPT50_27_2_2023 VALUES (6001,'SERVICE');
INSERT INTO STUDENT_DEPT50_27_2_2023 VALUES (7001,'LABOUR');
INSERT INTO STUDENT_DEPT50_27_2_2023 VALUES (8001,'HR');

1.SOL: SELECT ENAME "EMPLOYEE" FROM STUDENT_EMP50_27_2_2023 WHERE SAL = (SELECT MAX(SAL) FROM STUDENT_EMP50_27_2_2023);

2.SOL: SELECT ENAME "EMPLOYEE" FROM STUDENT_EMP50_27_2_2023 WHERE SAL = (SELECT MAX(SAL) FROM STUDENT_EMP50_27_2_2023 WHERE JOB = 'SALESMAN');
 
3.SOL: SELECT ENAME "EMPLOYEE" FROM STUDENT_EMP50_27_2_2023 WHERE SAL = (SELECT MIN(SAL) FROM STUDENT_EMP50_27_2_2023 WHERE JOB = 'CLERK');

4.SOL: SELECT DEPT_NAME FROM STUDENT_EMP50_27_2_2023 GROUP BY DEPT_NAME HAVING AVG(SAL) 
     = (SELECT MAX(AVG(SAL)) FROM STUDENT_EMP50_27_2_2023 GROUP BY DEPT_NAME);

 
5.SOL: SELECT ENAME "EMPLOYEE" FROM STUDENT_EMP50_27_2_2023 WHERE SAL>(SELECT SAL FROM STUDENT_EMP50_27_2_2023 WHERE ENAME = 'TURNER');
OUTPUT: EMPLOYEE
        ----------
        JOHN
        WILLIAM
        OLIVIA
        ROBERT

6.SOL: SELECT ENAME "EMPLOYEE" FROM STUDENT_EMP50_27_2_2023 WHERE HIREDATE
     >(SELECT HIREDATE FROM STUDENT_EMP50_27_2_2023 WHERE ENAME = 'ALLEN');
 
7.SOL: SELECT DEPT_NAME FROM STUDENT_EMP50_27_2_2023 WHERE ENAME = 'FORD'; 

8.SOL: SELECT DEPT_NAME FROM STUDENT_EMP50_27_2_2023 WHERE SAL = (SELECT MAX(MAX(SAL)) FROM STUDENT_EMP50_27_2_2023 GROUP BY DEPT_NAME);

9.SOL: SELECT LOC "LOCATION" FROM STUDENT_EMP50_27_2_2023 WHERE ENAME = 'SMITH';

10.SOL: SELECT LOC "LOCATION OF THE MANAGERS" FROM STUDENT_EMP50_27_2_2023 WHERE JOB = 'MANAGER';

11.SOL: SELECT GRADE FROM STUDENT_EMP50_27_2_2023 WHERE ENAME = 'MARTIN';

12.SOL: SELECT ENAME FROM STUDENT_EMP50_27_2_2023 WHERE SAL > (SELECT SAL FROM STUDENT_EMP50_27_2_2023 WHERE LOC = 'DALLAS');

13. SELECT d.DEPT_NAME FROM STUDENT_DEPT50_27_2_2023 d WHERE NOT EXISTS (SELECT * FROM STUDENT_EMP50_27_2_2023 e WHERE d.DEPT_ID = e.DEPT_ID);

14. SELECT ENAME FROM STUDENT_EMP50_27_2_2023 WHERE ENAME NOT LIKE 'ADAMS' AND HIREDATE = (SELECT HIREDATE FROM STUDENT_EMP50_27_2_2023 WHERE ENAME LIKE 'ADAMS');

15. SELECT DEPT_NAME FROM STUDENT_EMP50_27_2_2023 WHERE COMM IS NOT NULL;

16. SELECT * FROM STUDENT_EMP50_27_2_2023 WHERE (SAL,DEPT_NAME) IN
    (SELECT MIN(SAL),DEPT_NAME FROM STUDENT_EMP50_27_2_2023 GROUP BY DEPT_NAME)
ORDER BY SAL ASC;

17. SELECT DEPT_NAME FROM STUDENT_DEPT50_27_2_2023
  WHERE DEPT_ID IN
  (
    SELECT DEPT_ID
      FROM STUDENT_EMP50_27_2_2023
      GROUP BY DEPT_ID
      HAVING COUNT(*)>1
  );