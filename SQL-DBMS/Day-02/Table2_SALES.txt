student/student@ 172.16.1.210:1521/oracle

CREATE TABLE STUDENT_CLIENT_MASTER_50(
    CLIENTNO VARCHAR2(6) PRIMARY KEY,
    NAME VARCHAR2(20) NOT NULL,
    CITY VARCHAR2(15),
    PINCODE NUMBER(8),
    STATE VARCHAR2(15),
    BALANCEDUE NUMBER(10,2),
    CHECK(CLIENTNO LIKE 'C%'));

CREATE TABLE STUDENT_PRODUCT_MASTER_50(
    PRODUCTNO VARCHAR2(6) PRIMARY KEY,
    DESCRIPTION VARCHAR2(15) NOT NULL,
    PROFITPERCENT NUMBER(4,2) NOT NULL,
    UNITMEASURE VARCHAR2(10) NOT NULL,
    QTYINHAND NUMBER(8) NOT NULL,
    REORDERLVL NUMBER(8) NOT NULL,
    SELLPRICE NUMBER(8,2) NOT NULL,
    COSTPRICE NUMBER(8,2) NOT NULL,
    CHECK (SELLPRICE > 0),
    CHECK (COSTPRICE > 0));

CREATE TABLE STUDENT_SALESMAN_MASTER_50(
    SALESMANNO VARCHAR2(6) PRIMARY KEY,
    NAME VARCHAR2(20) NOT NULL,
    ADDRESS1 VARCHAR2(10) NOT NULL,
    ADDRESS VARCHAR2(10),
    CITY VARCHAR2(20),
    PINCODE NUMBER(7),
    STATE VARCHAR2(20),
    SAL NUMBER(8,2) NOT NULL,CHECK (SAL > 0),
    TGTTOGET NUMBER(6,2) NOT NULL,CHECK (TGTTOGET > 0),
    YTDSALES NUMBER(6,2) NOT NULL,
    REMARKS VARCHAR2(20),
    CHECK (SALESMANNO LIKE 'S%'));

CREATE TABLE STUDENT_SALES_ORDER_50(
    ORDERNO VARCHAR2(6) PRIMARY KEY,CHECK (ORDERNO LIKE 'O%'),
    ORDERDATE DATE,
    CLIENTNO VARCHAR2(6) REFERENCES STUDENT_CLIENT_MASTER_50(CLIENTNO),
    DELYADDRESS VARCHAR2(25),
    SALESMANNO VARCHAR2(6) REFERENCES STUDENT_SALESMAN_MASTER_50(SALESMANNO),
    DELYTYPE CHAR(1) DEFAULT ('F') CHECK (DELYTYPE IN ('P','F')),
    BILLEDYN CHAR(1),
    DELYDATE DATE,
    ORDERSTATUS VARCHAR2(11) CHECK (ORDERSTATUS IN ('INPROGRESS','FULFILLED','BACKORDER','CANCELLED')));

CREATE TABLE STUDENT_SALES_ORDER_DETAILS_50(
    ORDERNO VARCHAR2(6) REFERENCES STUDENT_SALES_ORDER_50(ORDERNO),
    PRODUCTNO VARCHAR2(6) REFERENCES STUDENT_PRODUCT_MASTER_50(PRODUCTNO),
    QTYORDERED NUMBER(8),
    QTYDISP NUMBER(8),
    PRODUCTRATE NUMBER(10,2));

/************************************************************************************************************/
 SELECT constraint_name,constraint_type,search_condition,table_name
 FROM user_constraints
 WHERE table_name='STUDENT_PRODUCT_MASTER_50';
 //IN BUILD SYSTEM TABLE THE TABLE CONTENTS ARE STORED USING THE CONSTRAINT NAME


/************************************************************************************************************/
 INSERT INTO STUDENT_CLIENT_MASTER_50 VALUES ('C00001', 'Ivan Bayross', 'Mumbai', 400054, 'Maharashtra', 15000);
 INSERT INTO STUDENT_CLIENT_MASTER_50 VALUES ('C00002', 'Mamta Mazumdar', 'Madras', 780001, 'Tamil Nadu', 0);
 INSERT INTO STUDENT_CLIENT_MASTER_50 VALUES ('C00004', 'Ashwini Joshi', 'Bangalore', 560001, 'Karnataka', 0);
 INSERT INTO STUDENT_CLIENT_MASTER_50 VALUES ('C00003', 'Chhaya Bankar', 'Mumbai', 400057, 'Maharashtra', 5000);
 INSERT INTO STUDENT_CLIENT_MASTER_50 VALUES ('C00005', 'Hansel Colaco', 'Mumbai', 400060, 'Maharashtra', 2000);
 INSERT INTO STUDENT_CLIENT_MASTER_50 VALUES ('C00006', 'Deepak Sharma', 'Mangalore', 560050, 'Karanataka', 0);

/************************************************************************************************************/
INSERT INTO STUDENT_PRODUCT_MASTER_50 VALUES('P00001','T-shirts',5,'Piece',200,50,350,250);
INSERT INTO STUDENT_PRODUCT_MASTER_50 VALUES('P0345','Shirts',6,'Piece',150,50,500,350);
INSERT INTO STUDENT_PRODUCT_MASTER_50 VALUES('P06734','Cotton Jeans',5,'Piece',100,20,600,450);
INSERT INTO STUDENT_PRODUCT_MASTER_50 VALUES('P07865','Jeans',5,'Piece',100,20,750,500);
INSERT INTO STUDENT_PRODUCT_MASTER_50 VALUES('P07868','Trousers',2,'Piece',150,50,850,550);
INSERT INTO STUDENT_PRODUCT_MASTER_50 VALUES('P07885','PuMOvers',2.5,'Piece',80,30,700,450);
INSERT INTO STUDENT_PRODUCT_MASTER_50 VALUES('P07965','Denim Shirts',4,'Piece',100,40,350,250);
INSERT INTO STUDENT_PRODUCT_MASTER_50 VALUES('P07975','Lyers Tops',5,'Piece',70,30,300,175);
INSERT INTO STUDENT_PRODUCT_MASTER_50 VALUES('P08865','Skirts',5,'Piece',75,30,450,300);
INSERT INTO STUDENT_PRODUCT_MASTER_50 VALUES('P03453','Leggings',5,'Piece',200,50,350,250);

/************************************************************************************************************/
INSERT ALL
INTO STUDENT_SALESMAN_MASTER_50 VALUES('S00001','Aman','A/14','Worli','Mumbai',400002,'Maharashtra',3000,100,50,'Good')
INTO STUDENT_SALESMAN_MASTER_50 VALUES('S00002','Omkar','B/65','Nariman','Mumbai',400001,'Maharashtra',3000,200,100,'Good')
INTO STUDENT_SALESMAN_MASTER_50 VALUES('S00003','Raj','C/20','Bandra','Mumbai',400032,'Maharashtra',3000,200,100,'Good')
INTO STUDENT_SALESMAN_MASTER_50 VALUES('S00004','Ashish','D/40','Juhu','Mumbai',400044,'Maharashtra',3500,200,150,'Good')
SELECT * FROM DUAL;

/************************************************************************************************************/
INSERT ALL
INTO STUDENT_SALES_ORDER_50 VALUES('O19001','10-JUL-02', 'C00001', '69 U.Bc Road', 'S00001', 'F', 'N', '20-JUL-02', 'IN PROGRESS')
INTO STUDENT_SALES_ORDER_50 VALUES('O19002','15-JUN-02', 'C00002', '108 U.Dc Road', 'S00002', 'P', 'N', '27-JUN-02', 'CANCELLED')
INTO STUDENT_SALES_ORDER_50 VALUES('O46865','11-FEB-02', 'C00003', '420 U.Kc Road', 'S00003', 'F', 'Y', '20-FEB-02', 'FULFILLED')
INTO STUDENT_SALES_ORDER_50 VALUES('O19003','15-MAR-02', 'C00001', '6969 U.Rc Road', 'S00001', 'F', 'Y', '07-APR-02', 'FULFILLED')
INTO STUDENT_SALES_ORDER_50 VALUES('O46866','12-MAY-02', 'C00004', '69 Hatt Yu Road', 'S00002', 'P', 'N', '22-MAY-02', 'CANCELLED')
INTO STUDENT_SALES_ORDER_50 VALUES('O19008','14-JUL-02', 'C00005', '420 I.Best Road', 'S00004', 'F', 'N', '26-JUL-02', 'IN PROGRESS')
SELECT * FROM DUAL;

/************************************************************************************************************/

INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O19001', 'P00001', 4, 4, 525);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O19001', 'P07965', 2, 1, 8400);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O19001', 'P07885', 2, 1, 5250);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O19002', 'P00001', 10, 0, 525);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O46865', 'P07868', 3, 3, 3150);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O46865', 'P07885', 3, 1, 5250);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O46865', 'P00001', 10, 10, 525);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O46865', 'P0345', 4, 4, 1050);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O19003', 'P03453', 2, 2, 1050);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O19003', 'P06734', 1, 1, 12000);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O46866', 'P07965', 1, 0, 8400);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O46866', 'P07975', 1, 0, 1050);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O19008', 'P00001', 10, 5, 525);
INSERT INTO STUDENT_SALES_ORDER_DETAILS_50 VALUES('O19008', 'P07975', 5, 3, 1050);

/************************************************************************************************************/
QUERIES
1) Find the names of all clients having ‘a’ as the second letter in their names.
SOL:  SELECT NAME FROM STUDENT_CLIENT_MASTER_50 WHERE NAME LIKE '_a%';

2) Find out the clients who stay in a city whose second letter is 'a'.
SOL:  SELECT * FROM STUDENT_CLIENT_MASTER_50 WHERE CITY LIKE '_a%';

3) Find the list of all clients who stay in 'Bombay' or 'Delhi'
SOL:  SELECT * FROM STUDENT_CLIENT_MASTER_50 WHERE CITY IN('Mumbai', 'Delhi');

4) Print the list of clients whose bal_due is greater than value 10000.
SOL:  SELECT * FROM STUDENT_CLIENT_MASTER_50 WHERE BALANCEDUE > 10000;

5) Print the information from sales_order table for orders placed in the month of January.
SOL:  SELECT * FROM STUDENT_SALES_ORDER_50 WHERE ORDERDATE LIKE '%JAN%';

6) Display the order information for client_no 'C00001' and 'C00002'.
SOL:  SELECT * FROM STUDENT_SALES_ORDER_50 WHERE CLIENTNO='C00001' OR CLIENTNO='C00002';

7) Find products whose selling price is greater than 2000 and less than or equal to 5000.
SOL:  SELECT * FROM STUDENT_PRODUCT_MASTER_50 WHERE SELLPRICE > 2000 AND SELLPRICE < 5000;

8) Find  products  whose  selling  price  is  more  than  1500.  Calculate  a  new  selling  price  as  original selling price * .15. Rename the new column in the above query as new_price.
SOL:  SELECT SELLPRICE,SELLPRICE * 0.15 "NEW PRICE" FROM STUDENT_PRODUCT_MASTER_50 WHERE SELLPRICE > 1500;

9) List the names, city and state of clients who are not in the state of 'Maharashtra'.
SOL:  SELECT NAME, CITY, STATE FROM STUDENT_CLIENT_MASTER_50 WHERE CITY NOT LIKE 'Maharashtra'; 

10) Count the total number of orders. 
SOL:  SELECT COUNT(ORDERNO) FROM STUDENT_SALES_ORDER_50;

11) Calculate the average price of all the products.
SOL:  SELECT AVG(SELLPRICE) FROM STUDENT_PRODUCT_MASTER_50;

12) Determine  the  maximum  and  minimum  product  prices.  Rename  the  output  as  max_price  and 
min_price respectively.
SOL:  SELECT MAX(SELLPRICE) "max_price", MIN(SELLPRICE) "min_price" FROM STUDENT_PRODUCT_MASTER_50;

13) Count the number of products having price greater than or equal to 1500. 
SOL:  SELECT COUNT(PRODUCTNO) FROM STUDENT_PRODUCT_MASTER_50 WHERE SELLPRICE >= 1500; 

14) Find all the products whose qty_on_hand is less than reorder level.
SOL:  SELECT * FROM STUDENT_PRODUCT_MASTER_50 WHERE QTYINHAND < REORDERLVL;

15) Display the order number and day on which clients placed their order.
SOL: SELECT ORDERNO, ORDERDATE FROM STUDENT_SALES_ORDER_50;